emotes::install_version("Matrix", version = "1.6.3")
remotes::install_version("Matrix", version = "1.6.3")
install.packages("lme4", type = "source")  # 1.1.35.1
remotes::install_version("Matrix", version = "1.6.4")
library(lme4)
library(metagear)
#Belowground Analysis
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett")
library(tidyverse)#for data wrangling and restructuring
library(plyr)#for data wrangling and restructuring
library(ggplot2)#for plotting
library(ggpubr)#extended functions for plotting
library(car)#for regression analysis
library(emmeans)#post-hoc analysis
library(lme4)#for modeling linear mixed effect models
soil <- read.csv("Soil Nutrients - Full.csv")
soil <- as.data.frame(unclass(soil),stringsAsFactors=TRUE)
nitrate <- ggplot(soil, aes(x = litter, y = K)) +
geom_point(aes(color = (removal))) +
facet_wrap(~burial) +
labs(x = "Litter Treatment", y = "Nitrate")
nitrate
K.lmm <- lmer(K ~ litter*removal + burial + (1|block) + (1|pair), data = soil)
summary(K.lmm)
Anova(K.lmm)
emmip(K.lmm, litter ~ removal)
emmeans(K.lmm, pairwise ~  removal|litter)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett")
library(litterfitter)#for k-curve fitting
library(tidyverse)#for data wrangling and restructuring
library(dplyr)#for data wrangling and restructuring
library(lme4)#for modeling linear mixed effect models
library(nlme)#alternative for modeling linear mixed effect models
library(ggplot2)#for plotting
library(ggpubr)#extended functions for plotting
library(car)#for regression analysis
library(emmeans)#post-hoc analysis
library(dplyr)
#load-in the data
winter <- read.csv("Litter Decomposition - 2023-2024 Overwinter.csv")
within <- read.csv("Litter Decomposition - 2024 Within Season.csv")
yearlong <- read.csv("Litter Decomposition - 2023-2024 Full Year.csv")
#yearlong <- read.csv("Litter Decomposition - 2023-2024 Yearlong.csv")
#bind
decomp <- rbind.fill(winter, within, yearlong)
#check structure
str(decomp)
decomp <- as.data.frame(unclass(decomp),stringsAsFactors=TRUE)
within <- as.data.frame(unclass(within),stringsAsFactors=TRUE)
winter <- as.data.frame(unclass(winter),stringsAsFactors=TRUE)
yearlong <- as.data.frame(unclass(yearlong),stringsAsFactors=TRUE)
#yearlong <- as.data.frame(unclass(yearlong),stringsAsFactors=TRUE)
#remove missing bags
decomp <- decomp %>%
filter(missing != "Yes") %>%
dplyr::select(-c((missing)))
within <- within %>%
filter(missing != "Yes") %>%
dplyr::select(-c((missing)))
winter <- winter %>%
filter(missing != "Yes") %>%
dplyr::select(-c((missing)))
yearlong <- yearlong %>%
filter(missing != "Yes") %>%
dplyr::select(-c((missing)))
decomp <- decomp %>% mutate(mass_remaining = final_dry_weight/initial_dry_weight)
within <- within %>% mutate(mass_remaining = final_dry_weight/initial_dry_weight)
winter <- winter %>% mutate(mass_remaining = final_dry_weight/initial_dry_weight)
yearlong <- yearlong %>% mutate(mass_remaining = final_dry_weight/initial_dry_weight)
decomp <- decomp %>% mutate(time = deployment_duration/365)
within <- within %>% mutate(time = deployment_duration/365)
winter <- winter %>% mutate(time = deployment_duration/365)
yearlong <- yearlong %>% mutate(time = deployment_duration/365)
#first lets see if decomp is different between treatment
over.lm <- lm(mass_remaining ~ removal*litter + deployment_period, data = decomp)
summary(over.lm)
Anova(over.lm)
emmip(over.lm, litter ~ deployment_period)
emmeans(over.lm, pairwise ~ litter|deployment_period)
litter <- fit_litter(time = decomp$time,
mass.remaining = decomp$mass_remaining,
model = "weibull",
iters=1000)
plot_multiple_fits(time = decomp$time,
mass.remaining = decomp$mass_remaining,
model=c("neg.exp","weibull"),
iters=500)
summary(litter)
class(litter)
plot(litter)
View(decomp)
#first lets see if decomp is different between treatment
over.lm <- lm(mass_remaining ~ removal*litter + deployment_period, data = decomp)
summary(over.lm)
Anova(over.lm)
emmip(over.lm, litter ~ deployment_period)
emmeans(over.lm, pairwise ~ litter|deployment_period)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett")
#first lets see if decomp is different between treatment
over.lm <- lm(mass_remaining ~ removal*litter + deployment_period, data = decomp)
summary(over.lm)
Anova(over.lm)
emmip(over.lm, litter ~ deployment_period)
emmeans(over.lm, pairwise ~ litter|deployment_period)
boxplot(decomp$mass_remaining ~ decomp$litter)
ggplot(decomp, aes(x = litter, y = mass_remaining)) +
geom_point(aes(color = (litter))) +
facet_wrap(~deployment_period) +
labs(x = "Litter Treatment", y = "Nitrate")
ggplot(decomp, aes(x = litter, y = mass_remaining)) +
geom_jitter(aes(color = (litter))) +
facet_wrap(~deployment_period) +
labs(x = "Litter Treatment", y = "Nitrate")
ggplot(decomp, aes(x = litter, y = mass_remaining)) +
geom_jitter(aes(color = (removal))) +
facet_wrap(~deployment_period) +
labs(x = "Litter Treatment", y = "Nitrate")
ggplot(decomp, aes(x = litter, y = mass_remaining)) +
geom_jitter(aes(color = (removal))) +
#facet_wrap(~deployment_period) +
labs(x = "Litter Treatment", y = "Mass remaining")
ggplot(decomp, aes(x = litter, y = mass_remaining)) +
geom_jitter(aes(color = (litter))) +
#facet_wrap(~deployment_period) +
labs(x = "Litter Treatment", y = "Mass remaining")
#Belowground Analysis
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett")
library(tidyverse)#for data wrangling and restructuring
library(plyr)#for data wrangling and restructuring
library(ggplot2)#for plotting
library(ggpubr)#extended functions for plotting
library(car)#for regression analysis
library(emmeans)#post-hoc analysis
library(lme4)#for modeling linear mixed effect models
soil <- read.csv("Soil Nutrients - Full.csv")
soil <- as.data.frame(unclass(soil),stringsAsFactors=TRUE)
nitrate <- ggplot(soil, aes(x = litter, y = K)) +
geom_point(aes(color = (removal))) +
facet_wrap(~burial) +
labs(x = "Litter Treatment", y = "K")
nitrate
K.lmm <- lmer(K ~ litter*removal + burial + (1|block) + (1|pair), data = soil)
litter <- fit_litter(time = decomp$time,
mass.remaining = decomp$mass_remaining,
model = "weibull",
iters=1000)
plot_multiple_fits(time = decomp$time,
mass.remaining = decomp$mass_remaining,
model=c("neg.exp","weibull"),
iters=500)
summary(litter)
class(litter)
plot(litter)
#Belowground Analysis
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett")
library(tidyverse)#for data wrangling and restructuring
library(plyr)#for data wrangling and restructuring
library(ggplot2)#for plotting
library(ggpubr)#extended functions for plotting
library(car)#for regression analysis
library(emmeans)#post-hoc analysis
soil <- read.csv("Soil Nutrients - Full.csv")
soil <- as.data.frame(unclass(soil),stringsAsFactors=TRUE)
View(soil)
K.lmm <- lmer(K ~ litter*removal + burial + (1|block) + (1|pair), data = soil)
summary(K.lmm)
Anova(K.lmm)
emmip(K.lmm, litter ~ removal)
emmeans(K.lmm, pairwise ~  removal|litter)
library(GGally)#this is new
library(factoextra)#this is new
#Set up---------------------------
#Set working directory, clean environment, etc.
setwd("C:/Users/jargr/Dropbox/PC/Desktop/Anny Stats/Lab 9")
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/Anny Stats/Lab 9")
#Set up---------------------------
#Set working directory, clean environment, etc.
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/Anny Stats/Lab 9")
#Load packages
library(GGally)#this is new
library(factoextra)#this is new
library(tidyverse)
#Import data--------------------
penguins <- read.csv("penguins.csv")
#remove rows if NAs occur in any of the variables we care about
penguins1 <- penguins %>% filter_at(vars(flipper_length_mm, body_mass_g,bill_length_mm, bill_depth_mm),
all_vars(!is.na(.)))
#Examine correlations among the body shape response variables------
#ggpairs plots is a good way to get lots of info (GGally package)
ggpairs(penguins1, mapping = aes(color = species),
columns = c("flipper_length_mm", "body_mass_g",
"bill_length_mm", "bill_depth_mm"))+
scale_colour_manual(values = c("darkorange","purple","cyan4")) +
scale_fill_manual(values = c("darkorange","purple","cyan4"))
#PCA analysis--------------------
peng.pca <- prcomp (~ bill_length_mm + bill_depth_mm + flipper_length_mm + body_mass_g,
data=penguins1,
scale. = TRUE) #Make sure to scale variables!
#Get factor loadings on principle components
peng.pca
#Visualize how much variation is explained by each principle component (Scree plot)
#Basic plot
plot(peng.pca)#however, this gives us the absolute variances, not % of total variance
#Use function from a different package (factoextra) for nicer plot
fviz_eig(peng.pca,addlabels = TRUE)
#Visualize results in a biplot--------
fviz_pca_biplot(peng.pca, label = "var",
col.ind = penguins1$species, palette = c("darkorange","purple","cyan4"),
col.var = "black", repel = TRUE,
legend.title = "Species")
