emmip(div.lmm, removal ~ year)
#Run some models
div.lmm <- lmer(div ~ removal*litter*year + (1|block) + (1|pair), data = el.div.comb)
summary(div.lmm)
Anova(div.lmm)
#Run some models
div.lmm <- lmer(div ~ removal*year + (1|block) + (1|pair), data = el.div.comb)
summary(div.lmm)
Anova(div.lmm)
emmip(div.lmm, removal ~ year)
Anova(div.lmm)
View(el.div.comb)
#Run some models
div.lmm <- lmer(div ~ removal*year*elevation + (1|block) + (1|pair), data = el.div.comb)
#Run some models
div.lmm <- lmer(div ~ removal*year + (1|block) + (1|pair), data = el.div.comb)
summary(div.lmm)
Anova(div.lmm)
emmip(div.lmm, removal ~ year)
emmeans(div.lmm, pairwise ~ removal|year)
rich.lmm <- lmer(rich ~ removal*year + (1|block) + (1|pair), data = el.div.comb)
summary(rich.lmm)
Anova(rich.lmm)
emmip(rich.lmm, removal ~ year)
emmeans(rich.lmm, pairwise ~ removal|year)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett")
# Load-in packages
library(tidyverse) # for data working
library(vegan) # for diversity
library(ggplot2) # plotting
library(ggpubr) # plotting
library(car)#for regression analysis
library(ggpubr)#extended functions for plotting
library(emmeans) # for comparison of means
library(rstatix) # for comparison of means
library(labdsv)
library(emmeans)#post-hoc analysis
library(indicspecies)
library(plyr)
library(statmod)
library(rstatix)
library(lme4)
EL.23 <- read.csv("Emerald Lake Plant Data - 2023.csv")
EL.24 <- read.csv("Emerald Lake Plant Data - 2024.csv")
#-----------------data structure-----------------#
#Combining Dataset
EL.comb <- rbind.fill(EL.23,EL.24)
str(EL.comb)
summary(EL.comb)
#changing to factors
EL.comb$site <- as.factor(EL.comb$site)
EL.comb$year <- as.factor(EL.comb$year)
EL.comb$litter <- as.factor(EL.comb$litter)
EL.comb$code <- as.factor(EL.comb$code)
EL.comb$collection <- as.factor(EL.comb$collection)
EL.comb$functional_group <- as.factor(EL.comb$functional_group)
EL.comb$removal <- as.factor(EL.comb$removal)
EL.comb$nearest_neighbor <- as.factor(EL.comb$nearest_neighbor)
EL.comb$pair <- as.factor(EL.comb$pair)
EL.comb$block <- as.factor(EL.comb$block)
EL.comb$plot <- as.factor(EL.comb$plot)
EL.comb$life_history <- as.factor(EL.comb$life_history)
#Removing pre treatment analysis from dataset
emerald <- EL.comb%>% filter (collection == "Post")
str(emerald)
summary(emerald)
#------------Diversity Analysis------------#
# here we will be working with the count column
# we will need to conververt data to a matrix format
emerald.24 <- EL.comb%>% filter (year == "2024")
emerald.24 <- emerald.24[!(emerald.24$functional_group %in% "environmental"),]
emerald.24.cov <- subset(emerald.24, select = c('plot','code','cover'))
emerald.matrix<- matrify(emerald.24.cov)
# Calculating Shannon diversity for plots
div <- diversity(emerald.matrix, index = "shannon")
# Calculating species richness for plots
rich <- specnumber(emerald.matrix)
# Calculating species evenness for plots
even <- diversity(emerald.matrix, index = "shannon") / log(specnumber(emerald.matrix))
#combined data set with Plot Data File and calculated values
p.data <- read.csv("Emerald Lake Plot Data - Info.csv") #importing metadata
el.div <- cbind(p.data,div,rich,even) #final dataset
write.csv(el.div, "/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett/Diversity 2024.csv", row.names=FALSE)
#------------Diversity Analysis------------#
# here we will be working with the count column
# we will need to conververt data to a matrix format
emerald.24 <- EL.comb%>% filter (year == "2023")
emerald.24 <- emerald.24[!(emerald.24$functional_group %in% "environmental"),]
emerald.24.cov <- subset(emerald.24, select = c('plot','code','cover'))
emerald.matrix<- matrify(emerald.24.cov)
# Calculating Shannon diversity for plots
div <- diversity(emerald.matrix, index = "shannon")
# Calculating species richness for plots
rich <- specnumber(emerald.matrix)
# Calculating species evenness for plots
even <- diversity(emerald.matrix, index = "shannon") / log(specnumber(emerald.matrix))
#combined data set with Plot Data File and calculated values
p.data <- read.csv("Emerald Lake Plot Data - Info.csv") #importing metadata
el.div <- cbind(p.data,div,rich,even) #final dataset
write.csv(el.div, "/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett/Diversity 2023.csv", row.names=FALSE)
el.div.23 <- read.csv("Diversity 2023.csv")
el.div.23$year <- 2023
el.div.24 <- read.csv("Diversity 2024.csv")
el.div.24$year <- 2024
el.div.comb<- rbind.fill(el.div.23,el.div.24)
el.div.comb$year <- as.factor(el.div.comb$yaer)
el.div.comb$year <- as.factor(el.div.comb$year)
#Run some models
div.lmm <- lmer(div ~ removal*year + (1|block) + (1|pair), data = el.div.comb)
summary(div.lmm)
Anova(div.lmm)
emmip(div.lmm, removal ~ year)
emmeans(div.lmm, pairwise ~ removal|year)
Anova(div.lmm)
rich.lmm <- lmer(rich ~ removal*year + (1|block) + (1|pair), data = el.div.comb)
summary(rich.lmm)
Anova(rich.lmm)
emmip(rich.lmm, removal ~ year)
emmeans(rich.lmm, pairwise ~ removal|year)
even.lmm <- lmer(even ~ removal*year + (1|block) + (1|pair), data = el.div.comb)
summary(even.lmm)
Anova(even.lmm)
emmip(even.lmm, removal ~ year)
emmeans(even.lmm, pairwise ~ year|removal)
diversity.plot <- ggplot(el.div.comb, aes(x = removal, y = div)) +
stat_summary(aes(group = pair), geom = "line", fun.y = mean, col ="ivory3") +
geom_point(aes(color = (removal), size = 1, alpha = 2), show.legend = FALSE) +
stat_summary(fun=mean, geom = "crossbar", position = position_dodge(1), linewidth = 1, width = 0.25, col = "grey34") +
theme_pubr() +
facet_wrap(~year) +
scale_color_manual(values=c( "khaki3", "burlywood4")) +
labs(x = "Castilleja septentrionalis", y = "Shannon Diversity") +
ylim(1,3)
diversity.plot
richness.plot <- ggplot(el.div.comb, aes(x = removal, y = rich)) +
stat_summary(aes(group = pair), geom = "line", fun.y = mean, col ="ivory3") +
geom_point(aes(color = (removal), size = 1, alpha = 2), show.legend = FALSE) +
stat_summary(fun=mean, geom = "crossbar", position = position_dodge(1), linewidth = 1, width = 0.25, col = "grey34") +
theme_pubr() +
facet_wrap(~year) +
scale_color_manual(values=c( "khaki3", "burlywood4")) +
labs(x = "Castilleja septentrionalis", y = "Species Richness") +
ylim(5,22)
richness.plot
evenness.plot <- ggplot(el.div.comb, aes(x = removal, y = even)) +
stat_summary(aes(group = pair), geom = "line", fun.y = mean, col ="ivory3") +
geom_point(aes(color = (removal), size = 1, alpha = 2), show.legend = FALSE) +
stat_summary(fun=mean, geom = "crossbar", position = position_dodge(1), linewidth = 1, width = 0.25, col = "grey34") +
theme_pubr() +
facet_wrap(~year) +
scale_color_manual(values=c( "khaki3", "burlywood4")) +
labs(x = "Castilleja septentrionalis", y = "Species Evenness") +
ylim(0.5,1)
evenness.plot
div.plot <- ggarrange(diversity.plot, richness.plot, evenness.plot,
labels = c("A", "B","C"),
nrow = 1, common.legend = TRUE, legend = "bottom")
div.plot
#------------Diversity Analysis------------#
# here we will be working with the count column
# we will need to conververt data to a matrix format
emerald.24 <- EL.comb%>% filter (year == "2024")
emerald.24 <- emerald.24[!(emerald.24$functional_group %in% "environmental"),]
emerald.24.cov <- subset(emerald.24, select = c('plot','code','cover'))
emerald.matrix<- matrify(emerald.24.cov)
#--------Composition Analysis (Multivariate analysis) -------#
# non-metric multidimensional scaling (NMDS)
# for this we need to take a matrix so we will retake code from before
emerald.24 <- EL.comb%>% filter (year == "2024")
emerald.24 <- emerald.24[!(emerald.24$functional_group %in% "environmental"),] #remove rock,bare, and Litter
emerald.matrix <- matrify(emerald.24.cov)
View(emerald.matrix)
emerald.matrix <- matrify(emerald.24.cov)
set.seed(20)#This sets the random start seed so that we are guaranteed to all get the same outputs
#First calculate distance matrix
emerald.dist<-vegdist(emerald.matrix, method="bray")
#First calculate distance matrix
emerald.dist <-vegdist(emerald.matrix, method="bray")
#Run NMDS on distance matrix
emerald.nmds<-metaMDS(emerald.dist,distance="bray", #use bray-curtis distance
k=2, #2 dimensions
try=500 #force it to try 100 different times (default is 20, for publication I recommend 500)
)
View(emerald.nmds)
emerald.nmds #Gives stress value of best solution, aim for <0.2
#Check the fit
stressplot(emerald.nmds) #Also called a "Shepard diagram"
ordiplot(emerald.nmds, type="text", display="sites")
stressplot(emerald.nmds) #Also called a "Shepard diagram"
emerald.nmds #Gives stress value of best solution, aim for <0.2
#Can output ordination coordinates and use ggplot for nicer graphics
nmds.scores <- as.data.frame(vegan::scores(emerald.nmds))  #Using the scores function from vegan to extract the site scores and convert to a data.frame
View(nmds.scores)
#Can output ordination coordinates and use ggplot for nicer graphics
nmds.scores <- as.data.frame(vegan::scores(emerald.nmds))  #Using the scores function from vegan to extract the site scores and convert to a data.frame
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
p.data <- read.csv("Emerald Lake Plot Data - Info.csv") #importing metadata
el.div <- cbind(p.data,nmds.scores) #final dataset
el.NMDS <- cbind(p.data,nmds.scores) #final dataset
View(el.NMDS)
View(el.NMDS)
#Build NMDS figure in ggplot
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point() +
geom_text_repel(aes(NMDS1, NMDS2, label = pair), size = 3)#avoids text overlapping
#--------Composition Analysis (Multivariate analysis) -------#
library(ggrepel)
#Build NMDS figure in ggplot
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point() +
geom_text_repel(aes(NMDS1, NMDS2, label = pair), size = 3)#avoids text overlapping
el.div.24 <- read.csv("Diversity 2024.csv")
el.div.24$year <- 2024
View(el.div.24)
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
el.data <- read.csv("Diversity 2024.csv") #importing metadata
el.NMDS <- cbind(el.data,nmds.scores) #final dataset
#Build NMDS figure in ggplot
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point() +
geom_text_repel(aes(NMDS1, NMDS2, label = pair), size = 3)#avoids text overlapping
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis(emerald.dist~removal*litter, data = mite.info, permutations=999)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~removal*litter, data = mite.info, permutations=999)
NMDS.scree <- function(x) { #where x is the name of the data frame variable
plot(rep(1, 6), replicate(6, metaMDS(x, autotransform = F, k = 1)$stress), xlim = c(1, 6),ylim = c(0, 0.30), xlab = "# of Dimensions", ylab = "Stress", main = "NMDS Scree plot")
for (i in 1:6) {
points(rep(i + 1,6),replicate(6, metaMDS(x, autotransform = F, k = i + 1)$stress))
}
}
#Try it on our data
# Use the function that we just defined to choose the optimal nr of dimensions
NMDS.scree(emerald.dist)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~removal*litter, data = mite.info, permutations=999)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~removal*litter, data = el.NMDS, permutations=999)
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point(aes(color=litter, shape=removal))
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point(aes(color= removal, shape=litter))
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point(aes(color= litter, shape=removal))
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point(aes(color= litter, shape=removal)) +
coord_equal() +
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~div*litter, data = el.NMDS, permutations=999)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~div*litter, data = el.NMDS, permutations=999)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~rich*litter, data = el.NMDS, permutations=999)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~removal*div*litter*rich, data = el.NMDS, permutations=999)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~removal*div*litter, data = el.NMDS, permutations=999)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~removal*litter, data = el.NMDS, permutations=999)
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point(aes(color= litter, shape=removal)) +
coord_equal() +
theme_bw()
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~removal*Block*litter, data = el.NMDS, permutations=999)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~removal*block*litter, data = el.NMDS, permutations=999)
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point(aes(color= block, shape=removal)) +
coord_equal() +
theme_bw()
#--------Composition Analysis (Multivariate analysis) -------#
library(ggrepel)
# non-metric multidimensional scaling (NMDS)
# for this we need to take a matrix so we will retake code from before
emerald.24 <- EL.comb%>% filter (year == "2024")
emerald.24 <- emerald.24[!(emerald.24$functional_group %in% "environmental"),] #remove rock,bare, and Litter
emerald.matrix <- matrify(emerald.24.cov)
set.seed(20)#This sets the random start seed so that we are guaranteed to all get the same outputs
#First calculate distance matrix
emerald.dist <-vegdist(emerald.matrix, method="bray")
#Run NMDS on distance matrix
emerald.nmds<-metaMDS(emerald.dist,distance="bray", #use bray-curtis distance
k=3, #2 dimensions
try=500 #force it to try 100 different times (default is 20, for publication I recommend 500)
)
emerald.nmds #Gives stress value of best solution, aim for <0.2
stressplot(emerald.nmds) #Also called a "Shepard diagram"
ordiplot(emerald.nmds, type="text", display="sites")
#Can output ordination coordinates and use ggplot for nicer graphics
nmds.scores <- as.data.frame(vegan::scores(emerald.nmds))  #Using the scores function from vegan to extract the site scores and convert to a data.frame
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
el.data <- read.csv("Diversity 2024.csv") #importing metadata
el.NMDS <- cbind(el.data,nmds.scores) #final dataset
#Build NMDS figure in ggplot
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point() +
geom_text_repel(aes(NMDS1, NMDS2, label = pair), size = 3)#avoids text overlapping
NMDS.scree <- function(x) { #where x is the name of the data frame variable
plot(rep(1, 6), replicate(6, metaMDS(x, autotransform = F, k = 1)$stress), xlim = c(1, 6),ylim = c(0, 0.30), xlab = "# of Dimensions", ylab = "Stress", main = "NMDS Scree plot")
for (i in 1:6) {
points(rep(i + 1,6),replicate(6, metaMDS(x, autotransform = F, k = i + 1)$stress))
}
}
#looks like k=3 is the best for our data
NMDS.scree(emerald.dist)
#PERMANOVA to test whether composition differs by shrub cover or topography---------
adonis2(emerald.dist~removal*block*litter, data = el.NMDS, permutations=999)
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point(aes(color= block, shape=removal)) +
coord_equal() +
theme_bw()
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point(aes(color= litter, shape=removal)) +
coord_equal() +
theme_bw()
View(el.NMDS)
ggplot(el.NMDS, aes(NMDS1, NMDS3)) +
geom_point(aes(color= litter, shape=removal)) +
coord_equal() +
theme_bw()
M
M
ggplot(el.NMDS, aes(NMDS2, NMDS3)) +
geom_point(aes(color= litter, shape=removal)) +
coord_equal() +
theme_bw()
ggplot(el.NMDS, aes(NMDS2, NMDS3)) +
geom_point(aes(color= litter, shape=removal)) +
coord_equal() +
theme_bw()
ggplot(el.NMDS, aes(NMDS1, NMDS3)) +
geom_point(aes(color= litter, shape=removal)) +
coord_equal() +
theme_bw()
ggplot(el.NMDS, aes(NMDS1, NMDS2)) +
geom_point(aes(color= litter, shape=removal)) +
coord_equal() +
theme_bw()
#Set the working directory
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Observational REU")
#load in packages
library(tidyverse)#for data wrangling and restructuring
library(plyr)#for data wrangling and restructuring
library(glmm)
library(ggplot2)#for plotting
library(ggpubr)#extended functions for plotting
library(car)#for regression analysis
library(emmeans)#post-hoc analysis
library(indicspecies)
library(statmod)
library(rstatix)
#Load in 2023 + 2024 datasets for septentrionalis(For cover analysis)
CASE.24 <- read.csv("Case 2024 Cover.csv")
View(CASE.24)
CASE.23 <- read.csv("Case 2023 Cover.csv")
#shifting structure to long format rather than matrix format
case.24.long<- pivot_longer(CASE.24, cols = Bare.ground:Viola.adunca,
names_to = "species",
values_to = "cover")
case.23.long<- pivot_longer(CASE.23, cols = Bare.ground:Viola.adunca,
names_to = "species",
values_to = "cover")
#Removing 0s from dateset
case.24.cover <- filter(case.24.long, cover > 0)
case.23.cover <- filter(case.23.long, cover > 0)
case.cover.comb <- rbind(case.23.cover,case.24.cover)
case.cover.zero <- rbind(case.23.long,case.24.long)
write.csv(case.cover.comb,"/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Observational REU/Combined septentrionalis Species Cover.csv", row.names=FALSE)
install.packages("openxlsx")
library(openxlsx)
write.xlsx(case.cover.comb,"/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Observational REU/Combined septentrionalis Species Cover.xlsx")
cali.cover <- read.csv("CALI Species Cover.csv")
View(cali.cover)
View(case.cover.comb)
case.cover <- read.csv("Case Species Cover.csv")
cali.cover <- read.csv("Case Species Cover.csv")
t
t
t
t
t
#Set the working directory
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Observational REU")
#load in packages
library(tidyverse)#for data wrangling and restructuring
library(plyr)#for data wrangling and restructuring
library(glmm)
library(ggplot2)#for plotting
library(ggpubr)#extended functions for plotting
library(car)#for regression analysis
library(emmeans)#post-hoc analysis
library(indicspecies)
library(statmod)
library(rstatix)
case.cover <- read.csv("Case Species Cover.csv")
cali.cover <- read.csv("Case Species Cover.csv")
#--------Composition Analysis (Multivariate analysis) -------#
library(ggrepel)
View(cali.cover)
# non-metric multidimensional scaling (NMDS)
# for this we need to take a matrix so we will retake code from before
case.pre.matrix <- emerald.24[!(case.cover$functional_group %in% ""),] #remove rock,bare, and Litter
# non-metric multidimensional scaling (NMDS)
# for this we need to take a matrix so we will retake code from before
case.pre.matrix <- case.cover[!(case.cover$functional_group %in% ""),] #remove rock,bare, and Litter
# non-metric multidimensional scaling (NMDS)
# for this we need to take a matrix so we will retake code from before
case.pre.matrix <- case.cover[!(case.cover$species %in% "Bare.ground"),] #remove rock,bare, and Litter
# non-metric multidimensional scaling (NMDS)
# for this we need to take a matrix so we will retake code from before
case.pre.matrix <- case.cover[!(case.cover$species %in% "Bare.ground"),] #remove rock,bare, and Litter
cali.pre.matrix <- cali.cover[!(cali.cover$species %in% "Bare.ground"),]
View(cali.pre.matrix)
View(cali.pre.matrix)
case.cov <- subset(case.pre.matrix, select = c('plot','species','cover'))
View(case.cov)
cali.species.matrix <- subset(cali.pre.matrix, select = c('plot','species','cover'))
View(cali.species.matrix)
#turn into a matrix
case.matrix <- matrify(case.species.matrix)
cali.matrix <- matrify(cali.species.matrix)
cali.species.matrix <- subset(cali.pre.matrix, select = c('plot','species','cover'))
cali.matrix <- matrify(cali.species.matrix)
View(cali.species.matrix)
View(cali.matrix)
#turn into a matrix
case.matrix <- matrify(case.species.matrix)
c
case.species.matrix <- subset(case.pre.matrix, select = c('plot','species','cover'))
#turn into a matrix
case.matrix <- matrify(case.species.matrix)
set.seed(20)#This sets the random start seed so that we are guaranteed to all get the same outputs
#First calculate distance matrix
case.dist <-vegdist(case.matrix, method="bray")
cali.dist <-vegdist(cali.matrix, method="bray")
#Run NMDS on distance matrix
case.nmds<-metaMDS(case.dist,distance="bray", #use bray-curtis distance
k=2, #2 dimensions
try=500 #force it to try 100 different times (default is 20, for publication I recommend 500)
)
emerald.nmds #Gives stress value of best solution, aim for <0.2
case.nmds #Gives stress value of best solution, aim for <0.2
cali.nmds<-metaMDS(cali.dist,distance="bray", #use bray-curtis distance
k=2, #2 dimensions
try=500 #force it to try 100 different times (default is 20, for publication I recommend 500)
)
cali.nmds
stressplot(cali.nmds) #Also called a "Shepard diagram"
stressplot(case.nmds)
ordiplot(case.nmds, type="text", display="sites")
ordiplot(cali.nmds, type="text", display="sites")
#Can output ordination coordinates and use ggplot for nicer graphics
case.nmds.scores <- as.data.frame(vegan::scores(case.nmds))
cali.nmds.scores <- as.data.frame(vegan::scores(cali.nmds))  #Using the scores function from vegan to extract the site scores and convert to a data.frame
View(case.cover)
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
case.data <- subset(case.cover, select = -c(1:8)
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
case.data <- subset(case.cover, select = -c(1:8)
cali.data <- subset(cali.cover, select = -c(1:8)
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
case.data <- subset(case.cover, select = -c(1:8))
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
case.data <- subset(case.cover, select = -c(1:8))
cali.data <- subset(cali.cover, select = -c(1:8))
View(cali.data)
View(cali.cover)
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
case.data <- subset(case.cover, select = -c(9:13))
View(case.data)
View(cali.cover)
cali.data <- subset(cali.cover, select = -c(9:13))
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
case.data <- subset(case.cover, select = -c(9:13))
View(case.data)
case.NMDS <- cbind(case.data,case.nmds.scores) #final dataset
View(case.data)
View(case.cover)
View(case.data)
case.data.wide <- case.data %>%
pivot_wider(names_from = plot,
values_from = c(plant.cover)) %>% drop_na()
case.data <- case.cover %>%
pivot_wider(names_from = species,
values_from = c(cover)) %>% drop_na()
View(case.data)
case.cover <- read.csv("Case Species Cover.csv")
cali.cover <- read.csv("Case Species Cover.csv")
case.data <- case.cover %>%
pivot_wider(names_from = species,
values_from = c(cover))
View(case.data)
View(case.cover)
#Add to mite.info dataframe
#combined data set with Plot Data File and calculated values
case.data <- subset(case.cover, select = -c(11:13))
case.data.wide <- case.data %>%
pivot_wider(names_from = species,
values_from = c(cover))
View(case.data.wide)
View(case.nmds.scores)
View(case.matrix)
