}
results_height <- height.long %>%
group_by(treatment,species,type) %>%
do(fit_logistic_model(.))
fit_logistic_model <- function(height.long) {
time <- height.long$week
height <- height.long$height
logistic_growth <- function(time,r,maxH) {
N0 <- height[1]
N <- N0 * maxH / (N0 + (maxH - N0) * exp(-r * time))
return(N)
}
#MLE
model <- optim(par = c(r = 1.5, K = 100),
fn = function(par) sum((height - logistic_growth(time,par[1],par[2]))^2),
method = "BFGS",
control = list(maxit = 200))
r_hat <- model$par[1]
maxH_hat <- model$par[2]
#predictions
predicted_height <- logistic_growth(time,r_hat,maxH_hat)
return(data.frame(species = unique(height.long$species),
type = unique(height.long$type),
treatment = unique(height.long$treatment),
week = time,
observed_height = height,
predicted_height = predicted_height,
r = r_hat,
maxH = maxH_hat,
N0 = height[1]))
}
results_height <- height.long %>%
group_by(treatment,species,type) %>%
do(fit_logistic_model(.))
View(height.long)
unique(height.long)
unique(height.long$height)
results_height <- height.long %>%
filter(!is.na(height)) %>%
group_by(treatment,species,type) %>%
do(fit_logistic_model(.))
View(results_height)
fit_logistic_model <- function(height.long) {
time <- height.long$week
height <- height.long$height
logistic_growth <- function(time,r,maxH) {
N0 <- height[1]
N <- N0 * maxH / (N0 + (maxH - N0) * exp(-r * time))
return(N)
}
#MLE
model <- optim(par = c(r = 0.5, K = 100),
fn = function(par) sum((height - logistic_growth(time,par[1],par[2]))^2),
method = "BFGS",
control = list(maxit = 200))
r_hat <- model$par[1]
maxH_hat <- model$par[2]
#predictions
predicted_height <- logistic_growth(time,r_hat,maxH_hat)
return(data.frame(species = unique(height.long$species),
type = unique(height.long$type),
treatment = unique(height.long$treatment),
week = time,
observed_height = height,
predicted_height = predicted_height,
r = r_hat,
maxH = maxH_hat,
N0 = height[1]))
}
results_height <- height.long %>%
filter(!is.na(height)) %>%
group_by(treatment,species,type) %>%
do(fit_logistic_model(.))
View(results_height)
#MLE
model <- optim(par = c(r = 0.3, K = 40),
fn = function(par) sum((height - logistic_growth(time,par[1],par[2]))^2),
method = "BFGS",
control = list(maxit = 200))
fit_logistic_model <- function(height.long) {
time <- height.long$week
height <- height.long$height
logistic_growth <- function(time,r,maxH) {
N0 <- height[1]
N <- N0 * maxH / (N0 + (maxH - N0) * exp(-r * time))
return(N)
}
#MLE
model <- optim(par = c(r = 0.3, K = 40),
fn = function(par) sum((height - logistic_growth(time,par[1],par[2]))^2),
method = "BFGS",
control = list(maxit = 200))
r_hat <- model$par[1]
maxH_hat <- model$par[2]
#predictions
predicted_height <- logistic_growth(time,r_hat,maxH_hat)
return(data.frame(species = unique(height.long$species),
type = unique(height.long$type),
treatment = unique(height.long$treatment),
week = time,
observed_height = height,
predicted_height = predicted_height,
r = r_hat,
maxH = maxH_hat,
N0 = height[1]))
}
fit_logistic_model <- function(height.long) {
time <- height.long$week
height <- height.long$height
logistic_growth <- function(time,r,maxH) {
N0 <- height[1]
N <- N0 * maxH / (N0 + (maxH - N0) * exp(-r * time))
return(N)
}
#MLE
model <- optim(par = c(r = 0.3, K = 40),
fn = function(par) sum((height - logistic_growth(time,par[1],par[2]))^2),
method = "BFGS",
control = list(maxit = 200))
r_hat <- model$par[1]
maxH_hat <- model$par[2]
#predictions
predicted_height <- logistic_growth(time,r_hat,maxH_hat)
return(data.frame(species = unique(height.long$species),
type = unique(height.long$type),
treatment = unique(height.long$treatment),
week = time,
observed_height = height,
predicted_height = predicted_height,
r = r_hat,
maxH = maxH_hat,
N0 = height[1]))
}
results_height <- height.long %>%
filter(!is.na(height)) %>%
group_by(treatment,species,type) %>%
do(fit_logistic_model(.))
View(results_height)
fit_logistic_model <- function(height.long) {
time <- height.long$week
height <- height.long$height
logistic_growth <- function(time,r,maxH) {
N0 <- height[1]
N <- N0 * maxH / (N0 + (maxH - N0) * exp(-r * time))
return(N)
}
#MLE
model <- optim(par = c(r = 0.05, K = 40),
fn = function(par) sum((height - logistic_growth(time,par[1],par[2]))^2),
method = "BFGS",
control = list(maxit = 200))
r_hat <- model$par[1]
maxH_hat <- model$par[2]
#predictions
predicted_height <- logistic_growth(time,r_hat,maxH_hat)
return(data.frame(species = unique(height.long$species),
type = unique(height.long$type),
treatment = unique(height.long$treatment),
week = time,
observed_height = height,
predicted_height = predicted_height,
r = r_hat,
maxH = maxH_hat,
N0 = height[1]))
}
results_height <- height.long %>%
filter(!is.na(height)) %>%
group_by(treatment,species,type) %>%
do(fit_logistic_model(.))
View(results_height)
fit_logistic_model <- function(height.long) {
time <- height.long$week
height <- height.long$height
logistic_growth <- function(time,r,maxH) {
N0 <- height[1]
N <- N0 * maxH / (N0 + (maxH - N0) * exp(-r * time))
return(N)
}
#MLE
model <- optim(par = c(r = 0.05, maxH = 40),
fn = function(par) sum((height - logistic_growth(time,par[1],par[2]))^2),
method = "BFGS",
control = list(maxit = 200))
r_hat <- model$par[1]
maxH_hat <- model$par[2]
#predictions
predicted_height <- logistic_growth(time,r_hat,maxH_hat)
return(data.frame(species = unique(height.long$species),
type = unique(height.long$type),
treatment = unique(height.long$treatment),
week = time,
observed_height = height,
predicted_height = predicted_height,
r = r_hat,
maxH = maxH_hat,
N0 = height[1]))
}
results_height <- height.long %>%
filter(!is.na(height)) %>%
group_by(treatment,species,type) %>%
do(fit_logistic_model(.))
View(results_height)
View(results_height)
results_height %>%
mutate(unique_ID <- paste(species,treatment,type,sep="_")) %>%
ggplot(aes(x = week, y = predicted_height)) +
geom_line() +
facet_wrap(~unique_ID) +
geom_point(aes(x=week,y=observed_height),size=2,alpha=0.3) +
labs(x="Week",y="Height") +
theme_classic()
results_height %>%
mutate(unique_ID <- paste(species,treatment,type,sep="_")) %>%
ggplot(aes(x = week, y = predicted_height)) +
geom_line() +
facet_wrap(~unique_ID) +
geom_point(aes(x=week,y=observed_height),size=2,alpha=0.3) +
labs(x="Week",y="Height") +
theme_classic()
results_height %<>%
mutate(unique_ID <- paste(species,treatment,type,sep="_"))
results_height %>%
mutate(unique_ID <- paste(species,treatment,type,sep="_"))
results_height %>%
mutate(unique_ID = paste(species,treatment,type,sep="_"))
results_height %>%
mutate(unique_ID = paste(species,treatment,type,sep="_")) %>%
ggplot(aes(x = week, y = predicted_height)) +
geom_line() +
facet_wrap(~unique_ID) +
geom_point(aes(x=week,y=observed_height),size=2,alpha=0.3) +
labs(x="Week",y="Height") +
theme_classic()
results_height %>%
mutate(unique_ID = paste(species,treatment,type,sep="_")) %>%
ggplot(aes(x = week, y = predicted_height)) +
geom_line() +
facet_wrap(~unique_ID,scales="free") +
geom_point(aes(x=week,y=observed_height),size=2,alpha=0.3) +
labs(x="Week",y="Height") +
theme_classic()
View(height.long)
results_height2 <- height.long %>%
filter(!is.na(height)) %>%
group_by(treatment,species,type,replicate_id) %>%
do(fit_logistic_model(.))
results_height2 %>%
mutate(unique_ID = paste(species,treatment,type,replicate_id,sep="_")) %>%
ggplot(aes(x = week, y = predicted_height)) +
geom_line() +
facet_wrap(~unique_ID,scales="free") +
geom_point(aes(x=week,y=observed_height),size=2,alpha=0.3) +
labs(x="Week",y="Height") +
theme_classic()
# EL Soil Moisture Calulations
# Initiated: 8/23/2023
# Complted:
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett")
# Load-in packages
library(tidyverse) # for data working
library(ggplot2) # plotting
library(ggpubr) # plotting
library(car) # Regression Analysis
library(emmeans)#post-hoc analysis
library(lme4)#for modeling linear mixed effect models
soil.moisture.23 <- read.csv("Emerald Lake Soil Moisture Data - 2023.csv")
soil.moisture.24 <- read.csv("Emerald Lake Soil Moisture Data - 2024.csv")
#checking data structure
str(soil.moisture.23)
soil.moisture.23$date <- as.factor(soil.moisture.23$date)
soil.moisture.24$date <- as.factor(soil.moisture.24$date)
soil.moisture.23$plot <- as.factor(soil.moisture.23$plot)
soil.moisture.24$plot <- as.factor(soil.moisture.24$plot)
moisture.23 <- na.omit(soil.moisture.23)
moisture.24 <- na.omit(soil.moisture.24)
#Create a new DF that groups by averages per plot
ASM.24 <- moisture.24 %>%
group_by(plot) %>%
mutate(asm24=mean(average_soil_moisture)) %>%
select(plot,asm24) %>%
distinct(plot, asm24, .keep_all = TRUE)
ASM.23 <- moisture.23 %>%
group_by(plot) %>%
mutate(asm23=mean(average_soil_moisture)) %>%
select(plot, asm23) %>%
distinct(plot, asm23, .keep_all = TRUE)
#Data Visualizations
el.plot <- read.csv("Emerald Lake Plot Data - Info.csv", header=TRUE)
el.plot$plot <- as.factor(el.plot$plot)
el.data.23 <- merge(el.plot,ASM.23, by = "plot")
el.data.full <- merge(el.data.23,ASM.24, by = "plot")
el.moisture <- el.data.full %>% select(plot,pair,block,removal,asm23,asm24)
str(el.moisture)
el.moisture$removal <- as.factor(el.moisture$removal)
el.moisture$block <- as.factor(el.moisture$block)
el.moisture$pair <- as.factor(el.moisture$pair)
#linear regression and ANOVA to to see if Block and Elevation effect SM
sm.lm <- lmer(asm24 ~ removal + (1|block) + (1|pair), data = el.moisture)
summary(sm.lm)
Anova(sm.lm)
#linear regression and ANOVA to to see if Block and Elevation effect SM
sm.lm <- lmer(asm24 ~ removal*litter + (1|block) + (1|pair), data = el.moisture)
summary(sm.lm)
Anova(sm.lm)
#linear regression and ANOVA to to see if Block and Elevation effect SM
sm.lm <- lmer(asm24 ~ removal*litter + (1|block) + (1|pair), data = el.moisture)
# EL Soil Moisture Calulations
# Initiated: 8/23/2023
# Complted:
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett")
# Load-in packages
library(tidyverse) # for data working
library(ggplot2) # plotting
library(ggpubr) # plotting
library(car) # Regression Analysis
library(emmeans)#post-hoc analysis
library(lme4)#for modeling linear mixed effect models
soil.moisture.23 <- read.csv("Emerald Lake Soil Moisture Data - 2023.csv")
soil.moisture.24 <- read.csv("Emerald Lake Soil Moisture Data - 2024.csv")
#checking data structure
str(soil.moisture.23)
soil.moisture.23$date <- as.factor(soil.moisture.23$date)
soil.moisture.24$date <- as.factor(soil.moisture.24$date)
soil.moisture.23$plot <- as.factor(soil.moisture.23$plot)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake/Soil Moisture")
# Load-in packages
library(tidyverse) # for data working
library(ggplot2) # plotting
library(ggpubr) # plotting
library(car) # Regression Analysis
library(emmeans)#post-hoc analysis
library(lme4)#for modeling linear mixed effect models
sm23 <- read.csv("Emerald Lake Soil Moisture Data - 2023.csv")
sm23 <- as.data.frame(unclass(sm23),stringsAsFactors=TRUE)
sm24 <- read.csv("Emerald Lake Soil Moisture Data - 2024.csv")
sm24 <- as.data.frame(unclass(sm24),stringsAsFactors=TRUE)
sm25 <- read.csv("Emerald Lake Soil Moisture Data - 2025.csv")
sm25 <- as.data.frame(unclass(sm25),stringsAsFactors=TRUE)
#Create a new DF that groups by averages per plot
august.sm23 <- sm23 %>%
group_by(plot) %>%
mutate(august_sm23=mean(average_soil_moisture)) %>%
select(plot,august_sm23) %>%
distinct(plot, august_sm23, .keep_all = TRUE)
august.sm24 <- sm24 %>%
group_by(plot) %>%
mutate(august_sm24=mean(average_soil_moisture)) %>%
select(plot, august_sm24) %>%
distinct(plot, august_sm24, .keep_all = TRUE)
august.sm25 <- sm25 %>%
group_by(plot) %>%
mutate(august_sm25=mean(average_soil_moisture)) %>%
select(plot, august_sm25) %>%
distinct(plot, august_sm25, .keep_all = TRUE)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake")
plot <- read.csv("Emerald Lake Plot Data - Info.csv", header=TRUE)
plot <- as.data.frame(unclass(plot),stringsAsFactors=TRUE)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake/Soil Moisture")
View(plot)
View(august.sm23)
View(august.sm24)
View(august.sm25)
sm23 <- read.csv("Emerald Lake Soil Moisture Data - 2023.csv")
sm23 <- as.data.frame(unclass(sm23),stringsAsFactors=TRUE)
View(sm23)
View(august.sm23)
View(sm23)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake/Soil Moisture")
# Load-in packages
library(tidyverse) # for data working
library(ggplot2) # plotting
library(ggpubr) # plotting
library(car) # Regression Analysis
library(emmeans)#post-hoc analysis
library(lme4)#for modeling linear mixed effect models
sm23 <- read.csv("Emerald Lake Soil Moisture Data - 2023.csv")
sm23 <- as.data.frame(unclass(sm23),stringsAsFactors=TRUE)
sm24 <- read.csv("Emerald Lake Soil Moisture Data - 2024.csv")
sm24 <- as.data.frame(unclass(sm24),stringsAsFactors=TRUE)
sm25 <- read.csv("Emerald Lake Soil Moisture Data - 2025.csv")
sm25 <- as.data.frame(unclass(sm25),stringsAsFactors=TRUE)
#Create a new DF that groups by averages per plot
august.sm23 <- sm23 %>%
group_by(plot) %>%
mutate(august_sm23=mean(average_soil_moisture)) %>%
select(plot,august_sm23) %>%
distinct(plot, august_sm23, .keep_all = TRUE)
august.sm24 <- sm24 %>%
group_by(plot) %>%
mutate(august_sm24=mean(average_soil_moisture)) %>%
select(plot, august_sm24) %>%
distinct(plot, august_sm24, .keep_all = TRUE)
august.sm25 <- sm25 %>%
group_by(plot) %>%
mutate(august_sm25=mean(average_soil_moisture)) %>%
select(plot, august_sm25) %>%
distinct(plot, august_sm25, .keep_all = TRUE)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake")
plot <- read.csv("Emerald Lake Plot Data - Info.csv", header=TRUE)
plot <- as.data.frame(unclass(plot),stringsAsFactors=TRUE)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake/Soil Moisture")
View(august.sm23)
View(august.sm23)
View(august.sm23)
View(august.sm24)
#Create a new DF that groups by averages per plot
august.sm23 <- sm23 %>%
group_by(plot) %>%
mutate(august_sm23=mean(average_soil_moisture))
View(august.sm23)
#Create a new DF that groups by averages per plot
august.sm23 <- sm23 %>%
mutate(august_sm23=mean(average_soil_moisture))
View(august.sm23)
#Create a new DF that groups by averages per plot
august.sm23 <- sm23 %>%
mutate(august_sm23 = mean(plot, average_soil_moisture))
# EL Soil Moisture Calulations
# Initiated: 8/23/2023
# Complted:
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/2024 Argrett")
# Load-in packages
library(tidyverse) # for data working
library(ggplot2) # plotting
library(ggpubr) # plotting
library(car) # Regression Analysis
library(emmeans)#post-hoc analysis
library(lme4)#for modeling linear mixed effect models
soil.moisture.23 <- read.csv("Emerald Lake Soil Moisture Data - 2023.csv")
soil.moisture.24 <- read.csv("Emerald Lake Soil Moisture Data - 2024.csv")
#checking data structure
str(soil.moisture.23)
soil.moisture.23$date <- as.factor(soil.moisture.23$date)
soil.moisture.24$date <- as.factor(soil.moisture.24$date)
soil.moisture.23$plot <- as.factor(soil.moisture.23$plot)
soil.moisture.24$plot <- as.factor(soil.moisture.24$plot)
moisture.23 <- na.omit(soil.moisture.23)
moisture.24 <- na.omit(soil.moisture.24)
#Create a new DF that groups by averages per plot
ASM.24 <- moisture.24 %>%
group_by(plot) %>%
mutate(asm24=mean(average_soil_moisture)) %>%
select(plot,asm24) %>%
distinct(plot, asm24, .keep_all = TRUE)
ASM.23 <- moisture.23 %>%
group_by(plot) %>%
mutate(asm23=mean(average_soil_moisture)) %>%
select(plot, asm23) %>%
distinct(plot, asm23, .keep_all = TRUE)
#Data Visualizations
el.plot <- read.csv("Emerald Lake Plot Data - Info.csv", header=TRUE)
View(ASM.23)
august.sm23 <- sm23 %>%
group_by(plot) %>%
summarise_at(vars(average_soil_moisture), list(name = mean))
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake/Soil Moisture")
# Load-in packages
library(tidyverse) # for data working
library(ggplot2) # plotting
library(ggpubr) # plotting
library(car) # Regression Analysis
library(emmeans)#post-hoc analysis
library(lme4)#for modeling linear mixed effect models
sm23 <- read.csv("Emerald Lake Soil Moisture Data - 2023.csv")
sm23 <- as.data.frame(unclass(sm23),stringsAsFactors=TRUE)
sm24 <- read.csv("Emerald Lake Soil Moisture Data - 2024.csv")
sm24 <- as.data.frame(unclass(sm24),stringsAsFactors=TRUE)
sm25 <- read.csv("Emerald Lake Soil Moisture Data - 2025.csv")
sm25 <- as.data.frame(unclass(sm25),stringsAsFactors=TRUE)
august.sm23 <- sm23 %>%
group_by(plot) %>%
summarise_at(vars(average_soil_moisture), list(name = mean))
View(august.sm23)
#Create a new DF that groups by averages per plot
august.sm23 <- sm23 %>%
group_by(plot) %>%
summarise_at(vars(average_soil_moisture), list(asm23 = mean))
august.sm24 <- sm24 %>%
group_by(plot) %>%
summarise_at(vars(average_soil_moisture), list(asm24 = mean))
august.sm25 <- sm25 %>%
group_by(plot) %>%
summarise_at(vars(average_soil_moisture), list(asm25 = mean))
View(sm25)
View(august.sm25)
#Create a new DF that groups by averages per plot
august.sm23 <- sm23 %>%
group_by(plot) %>%
summarise_at(vars(average_soil_moisture), list(asm23 = mean))
august.sm24 <- sm24 %>%
group_by(plot) %>%
summarise_at(vars(average_soil_moisture), list(asm24 = mean))
august.sm25 <- sm25 %>%
group_by(plot) %>%
summarise_at(vars(average_soil_moisture), list(asm25 = mean))
View(august.sm24)
View(august.sm23)
View(august.sm25)
soil.moisture <- merge(august.sm23, august.sm24, august.sm25,by = "plot")
soil.moisture <- merge(august.sm23, august.sm24, august.sm25,by = plot)
soil.moisture <- merge(august.sm23, august.sm24, august.sm25, by = 1)
soil.moisture <- merge(august.sm23, august.sm24, by = "plot")
View(soil.moisture)
soil.moisture <- merge(soil.moisture, august.sm25, by = "plot")
View(soil.moisture)
setwd("/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake")
plot <- read.csv("Emerald Lake Plot Data - Info.csv", header=TRUE)
plot <- as.data.frame(unclass(plot),stringsAsFactors=TRUE)
soil.moisture <- merge(plot, soil.moisture, by = "plot")
View(soil.moisture)
write.csv(el.div.23, "/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake/Soil Moisture/Moisture.csv", row.names=FALSE)
write.csv(soil.moisture, "/Users/jargrett/Desktop/Castilleja/Data Analysis/RMBL/Emerald Lake/Soil Moisture/Moisture.csv", row.names=FALSE)
